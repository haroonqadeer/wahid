{"remainingRequest":"G:\\Logix\\Information Architect\\wahid\\HaroonU\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!G:\\Logix\\Information Architect\\wahid\\HaroonU\\node_modules\\ngx-modal-dialog\\src\\modal-dialog-instance.service.js","dependencies":[{"path":"G:\\Logix\\Information Architect\\wahid\\HaroonU\\node_modules\\ngx-modal-dialog\\src\\modal-dialog-instance.service.js","mtime":1528883083000},{"path":"G:\\Logix\\Information Architect\\wahid\\HaroonU\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539413788549},{"path":"G:\\Logix\\Information Architect\\wahid\\HaroonU\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["var ModalDialogInstanceService = /** @class */ /*@__PURE__*/ (function () {\r\n    function ModalDialogInstanceService() {\r\n        /**\r\n         * Used to make sure there is exactly one instance of Modal Dialog\r\n         */\r\n        this.componentRefs = [];\r\n    }\r\n    /**\r\n     * Closes existing modal dialog\r\n     */\r\n    ModalDialogInstanceService.prototype.closeAnyExistingModalDialog = function () {\r\n        while (this.componentRefs.length) {\r\n            this.componentRefs[this.componentRefs.length - 1].destroy();\r\n        }\r\n    };\r\n    /**\r\n     * Save component ref for future comparison\r\n     * @param componentRef\r\n     */\r\n    ModalDialogInstanceService.prototype.saveExistingModalDialog = function (componentRef) {\r\n        var _this = this;\r\n        // remove overlay from top element\r\n        this.setOverlayForTopDialog(false);\r\n        // add new component\r\n        this.componentRefs = this.componentRefs.concat([componentRef]);\r\n        componentRef.instance.showOverlay = true;\r\n        componentRef.onDestroy(function () {\r\n            _this.componentRefs.pop();\r\n            _this.setOverlayForTopDialog(true);\r\n        });\r\n    };\r\n    ModalDialogInstanceService.prototype.setOverlayForTopDialog = function (value) {\r\n        if (this.componentRefs.length) {\r\n            this.componentRefs[this.componentRefs.length - 1].instance.showOverlay = value;\r\n        }\r\n    };\r\n    return ModalDialogInstanceService;\r\n}());\r\nexport { ModalDialogInstanceService };\r\n",null]}